{"version":3,"sources":["icons.js","components/icon.jsx","utils.js","schemas/tabs.js","components/site_popup.jsx","components/markers.jsx","containers/markers.js","containers/search_provider.js","components/search_bar.jsx","containers/search_bar.js","components/legend.jsx","containers/legend.js","config.js","apikeys.js","components/interactive_map.jsx","containers/interactive_map.js","actions/index.js","components/app.jsx","reducers/index.js","sagas/map_saga.js","registerServiceWorker.js","index.js"],"names":["icons","MONASTERY","Icon","color","icon","size","translate","scale","styles","svg","display","verticalAlign","path","fill","stroke","strokeWidth","style","width","height","transform","viewBox","d","defaultProps","orderLookup","order","getDms","val","result","v","Math","abs","deg","floor","push","min","sec","round","startCaseTerm","t","trim","charAt","toUpperCase","slice","startCaseList","l","split","map","word","join","TabSchema","displayText","fields","SitePopup","feature","fieldValueMarkup","fv","lat","lng","latResult","lngResult","concat","ddToDms","toLowerCase","Array","isArray","key","_","uniqueId","href","names","item","name","length","Date","toLocaleString","tabHeaderMarkup","textAlign","part","tabPanelMarkup","fieldValue","get","fieldTitle","markerIcon","setProps","Icons","placeType","placeTypeLookup","properties","place_type","L","divIcon","html","ReactDOMServer","renderToString","handleMarkerClick","marker","a","ReactDOM","render","document","getElementById","Markers","markersMarkup","sites","coordinates","english_place_name","italian_place_name","Marker","id","position","reverse","data","Popup","minWidth","maxWidth","className","Tooltip","onClick","MarkersContainer","connect","state","SearchProvider","this","query","lowerCaseQuery","matches","filter","geometry","indexOf","x","y","label","Search","provider","initProvider","GeoSearchControl","showMarker","showPopup","searchLabel","autoClose","keepResult","MapControl","SearchBar","withLeaflet","SearchBarContainer","Legend","loading","orderListMarkup","ordersSet","reduce","accumulator","currentValue","m","endsWith","has","add","Set","sort","b","localeCompare","getListOfOrders","background","Object","values","toString","Pane","LegendContainer","CONFIG","centerPoint","initialZoom","maxZoom","tileURL","mapAttribution","dataFile","API_KEY","MAPBOX_ACCESS_TOKEN","InteractiveMap","Map","center","config","zoom","TileLayer","url","apikeys","attribution","InteractiveMapContainer","INIT_MAP","LOAD_SITES_BEGIN","LOAD_SITES_SUCCESS","LOAD_SITES_FAILURE","initMap","type","dispatch","initialState","fetchSites","mapSaga","endpoint","put","call","fetch","response","json","features","set","error","message","takeEvery","all","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","action","cloneDeep","compose","unset","applyMiddleware","run","URL","process","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6a26bbe1.chunk.js","sourcesContent":["const icons = {\n  MONASTERY:\n    'M200 434 c-25 -20 -46 -40 -48 -45 -2 -5 38 -9 92 -9 53 0 96 4 96 8 0 8 -58 59 -85 74 -6 4 -31 -9 -55 -28z M16 351 c-14 -16 -16 -40 -14 -182 l3 -164 152 -3 152 -3 4 58 3 58 2 -57 2 -58 78 0 c47 0 83 5 90 12 8 8 12 60 12 168 0 139 -2 159 -18 173 -10 10 -23 17 -29 17 -21 0 -43 -38 -43 -73 l0 -37 -165 0 -165 0 0 38 c0 25 -7 45 -18 55 -23 21 -25 21 -46 -2z m34 -82 c0 -5 -7 -9 -15 -9 -15 0 -20 12 -9 23 8 8 24 -1 24 -14z m420 0 c0 -5 -7 -9 -15 -9 -15 0 -20 12 -9 23 8 8 24 -1 24 -14z m-178 -116 c10 -9 18 -21 18 -27 0 -6 -7 -1 -15 11 -9 12 -29 23 -48 26 -32 4 -32 4 -3 5 16 1 38 -5 48 -15z M150 320 c0 -43 3 -50 19 -50 15 0 21 8 23 32 4 46 28 49 28 4 0 -32 3 -36 25 -36 22 0 25 4 25 35 0 24 5 35 15 35 10 0 15 -11 15 -35 0 -31 3 -35 25 -35 23 0 25 3 25 50 l0 50 -100 0 -100 0 0 -50z',\n};\nexport default icons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = ({ color, icon, size, translate, scale }) => {\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    },\n    path: {\n      fill: color,\n      stroke: '#fff',\n      strokeWidth: '25',\n    },\n  };\n\n  return (\n    <svg\n      style={styles.svg}\n      width={`${size}px`}\n      height={`${size}px`}\n      transform={`translate(${translate}) scale(${scale})`}\n      viewBox=\"0 0 1024 1024\"\n    >\n      <g style={styles.path}>\n        <path d={icon} />\n      </g>\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  translate: PropTypes.string,\n  scale: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  color: '#000000',\n  scale: '',\n  translate: '',\n  size: 55,\n};\n\nexport default Icon;\n","import icons from './icons';\n\nexport const orderLookup = order => {\n  switch (order) {\n    case 'Augustinian Canons':\n      return { color: '#969CA1' };\n\n    case 'Basilians':\n      return { color: '#6f93ad' };\n\n    case 'Basilians then Cistericans':\n      return { color: '#38e3df' };\n\n    case 'Benedictines':\n      return { color: '#c683ea' };\n\n    case 'Cistercians':\n      return { color: '#d688aa' };\n\n    case 'Cluniacs':\n      return { color: '#e77a68' };\n\n    case 'Knights of the Hospital of Saint Lazarus at Jerusalem':\n      return { color: '#eda268' };\n\n    case 'Knights of the Hospital of Saint John of Jerusalem':\n      return { color: '#6795fe' };\n\n    case 'Knights Templar':\n      return { color: '#ffff00' };\n\n    case 'Premonstratensian Canons':\n      return { color: '#ff76b8' };\n\n    default:\n      return { color: '#fff' };\n  }\n};\n\nexport const placeTypeLookup = placeType => {\n  switch (placeType) {\n    case 'monastery':\n      return { icon: icons.MONASTERY, scale: '1,-1', translate: '-6,-41' };\n    default: {\n      return {};\n    }\n  }\n};\n\nexport const getListOfOrders = sites => {\n  const ordersSet = sites.reduce((accumulator, currentValue) => {\n    if (\n      currentValue.properties.order &&\n      currentValue.properties.order.length > 0\n    ) {\n      const m = currentValue.properties.order;\n      if (!m.endsWith('?') && !accumulator.has(m)) {\n        accumulator.add(m);\n      }\n    }\n\n    return accumulator;\n  }, new Set(['Unknown']));\n  return [...ordersSet].sort((a, b) => a.localeCompare(b));\n};\n\n// source: http://en.marnoto.com/2014/04/converter-coordenadas-gps.html\nconst getDms = val => {\n  const result = [];\n  const v = Math.abs(val);\n\n  const deg = Math.floor(v);\n  result.push(`${deg}º`);\n\n  const min = Math.floor((v - deg) * 60);\n  result.push(`${min}'`);\n\n  const sec = Math.round((v - deg - min / 60) * 3600 * 1000) / 1000;\n  result.push(`${sec}\"`);\n\n  return result;\n};\n\n// source: http://en.marnoto.com/2014/04/converter-coordenadas-gps.html\nexport const ddToDms = ({ lat, lng }) => {\n  const latResult = [];\n  latResult.push(lat >= 0 ? 'N' : 'S');\n\n  const lngResult = [];\n  lngResult.push(lng >= 0 ? 'E' : 'W');\n\n  return `${lngResult.concat(getDms(lng)).join(' ')} ${latResult\n    .concat(getDms(lat))\n    .join(' ')}`;\n};\n\nexport const startCaseTerm = t => {\n  return (\n    t\n      .trim()\n      .charAt(0)\n      .toUpperCase() + t.slice(1)\n  );\n};\n\nexport const startCaseList = (l, d) => {\n  const words = l.split(d);\n  return words\n    .map(word => {\n      return startCaseTerm(word);\n    })\n    .join(', ');\n};\n","const TabSchema = [\n  {\n    displayText: 'Names',\n    fields: [\n      {\n        displayText: 'English',\n        path: 'properties.english_place_name',\n      },\n      {\n        displayText: 'Italian',\n        path: 'properties.italian_place_name',\n      },\n      {\n        displayText: 'Alternate place names',\n        path: 'properties.alternate_place_names',\n      },\n    ],\n  },\n  {\n    displayText: 'Community and\\nPatronage',\n    fields: [\n      {\n        displayText: 'Order',\n        path: 'properties.order',\n      },\n      {\n        displayText: 'Subject of Dedication',\n        path: 'properties.dedication',\n      },\n      {\n        displayText: 'Gender',\n        path: 'properties.gender',\n      },\n      {\n        displayText: 'Rank at Foundation',\n        path: 'properties.rank_at_foundation',\n      },\n      {\n        displayText: 'Mother House To',\n        path: 'properties.children',\n      },\n      {\n        displayText: 'Subject Of',\n        path: 'properties.parent',\n      },\n      {\n        displayText: 'Founder(s)',\n        path: 'properties.founders',\n      },\n    ],\n  },\n  {\n    displayText: 'Location',\n    fields: [\n      {\n        displayText: 'Longitude and Latitude',\n        path: 'geometry.coordinates',\n      },\n      {\n        displayText: 'Are These Coordinates Fairly Precise',\n        path: 'properties.positional_accuracy_assesment',\n      },\n      {\n        displayText: 'Historical Region',\n        path: 'properties.historical_province',\n      },\n      {\n        displayText: 'Modern Province',\n        path: 'properties.province',\n      },\n      {\n        displayText: 'Modern Comune',\n        path: 'properties.comune',\n      },\n      {\n        displayText: 'Location Name Variations',\n        path: 'properties.alternate_location_names',\n      },\n      {\n        displayText: 'Geonames URI ',\n        path: 'properties.location_see_also_uris',\n      },\n      {\n        displayText: 'Approximate Elevation in Meters',\n        path: 'properties.elevation',\n      },\n    ],\n  },\n  {\n    displayText: 'Sustainability',\n    fields: [\n      {\n        displayText: 'Date(s) Visited',\n        path: 'properties.dates_visited',\n      },\n      {\n        displayText: 'Does A Structure (Norman or Later) Exist Today?',\n        path: 'properties.archaeological_remains',\n      },\n      {\n        displayText:\n          'Seismic Classification According to the Dipartimento della Protezione Civile (2015)\\n(on a scale of 1 - 4, with 1 representing the greatest risk for strong seismic activity)',\n        path: 'properties.seismic_class_id',\n      },\n      {\n        displayText: 'Cultural Stone Stability Index for Observation One',\n        path: 'properties.cultural_stone_stability_index_for_observation_one',\n      },\n      {\n        displayText: 'Cultural Stone Stability Index for Observation Two',\n        path: 'properties.cultural_stone_stability_index_for_observation_two',\n      },\n      {\n        displayText: 'Cultural Stone Stability Index for Observation Three',\n        path: 'properties.cultural_stone_stability_index_for_observation_three',\n      },\n      {\n        displayText: 'Greatest Stone Stability Concerns ',\n        path: 'properties.stone_stability_concerns',\n      },\n      {\n        displayText: 'Greatest External Threats',\n        path: 'properties.stone_external_threats',\n      },\n    ],\n  },\n  {\n    displayText: 'Attestation',\n    fields: [\n      {\n        displayText: 'Types',\n        path: 'properties.attestation_types',\n      },\n      {\n        displayText: 'Earliest Surviving Record (Minimum Year) ',\n        path: 'properties.earliest_attestation_min_year',\n      },\n      {\n        displayText: 'Earliest Surviving Record (Maximum Year) ',\n        path: 'properties.earliest_attestation_max_year',\n      },\n      {\n        displayText: 'Earliest Surviving Record Notes',\n        path: '',\n      },\n      {\n        displayText: 'Period of First Attestation',\n        path: 'properties.reign_of_earliest_attestation_label',\n      },\n    ],\n  },\n  {\n    displayText: 'Selected Sources\\nand Notes',\n    fields: [\n      {\n        displayText: 'Sources',\n        path: 'properties.place_references',\n      },\n      {\n        displayText: 'Notes',\n        path: 'properties.notes',\n      },\n    ],\n  },\n  {\n    displayText: 'Metadata',\n    fields: [\n      {\n        displayText: 'Record Status',\n        path: 'properties.record_status',\n      },\n      {\n        displayText: 'Creation Date',\n        path: 'properties.created_at',\n      },\n      {\n        displayText: 'Creation By',\n        path: 'properties.created_by',\n      },\n      {\n        displayText: 'Last Updated on',\n        path: 'properties.updated_at',\n      },\n      {\n        displayText: 'Updated By',\n        path: 'properties.updated_by',\n      },\n    ],\n  },\n];\n\nexport default TabSchema;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport _ from 'lodash';\nimport TabSchema from '../schemas/tabs';\nimport { ddToDms, startCaseTerm, startCaseList } from '../utils';\n\nconst SitePopup = ({ feature }) => {\n  const fieldValueMarkup = (path, fv) => {\n    if (fv) {\n      switch (path) {\n        case 'geometry.coordinates': {\n          return (\n            <div>\n              <div>{fv.join(', ')}</div>\n              <div>{ddToDms({ lat: fv[1], lng: fv[0] })}</div>\n            </div>\n          );\n        }\n        case 'properties.positional_accuracy_assessment': {\n          if (fv.toLowerCase() === 'unknown') {\n            return 'No';\n          }\n          return `Yes (${startCaseList(fv, '_')})`;\n        }\n        case 'properties.attestation_types': {\n          return startCaseList(fv, ',');\n        }\n        case 'properties.location_see_also_uris': {\n          if (Array.isArray(fv)) {\n            return fv.map(v => (\n              <div key={_.uniqueId('location-see-also-uri-')}>\n                <a href={`${v}`}>{v}</a>\n              </div>\n            ));\n          }\n          return <a href={`${fv}`}>{fv}</a>;\n        }\n        case 'properties.alternate_place_names':\n        case 'properties.alternate_location_names': {\n          const names = fv.map(item => {\n            return item.name;\n          });\n          return names.length > 0 ? names.join(', ') : null;\n        }\n        case 'properties.created_at':\n        case 'properties.updated_at': {\n          return new Date(fv).toLocaleString();\n        }\n        case 'properties.record_status': {\n          return startCaseTerm(fv);\n        }\n        default: {\n          if (Array.isArray(fv)) {\n            return fv.length > 0 ? fv.join(', ') : null;\n          }\n          return fv;\n        }\n      }\n    }\n    return null;\n  };\n\n  const tabHeaderMarkup = (\n    <TabList>\n      {TabSchema.map(({ displayText }) => {\n        return (\n          <Tab key={_.uniqueId('tab-')}>\n            <div style={{ textAlign: 'center' }}>\n              {displayText.split('\\n').map(part => {\n                return <div key={_.uniqueId('tab-name')}>{part}</div>;\n              })}\n            </div>\n          </Tab>\n        );\n      })}\n    </TabList>\n  );\n\n  const tabPanelMarkup = TabSchema.map(({ fields }) => {\n    return (\n      <TabPanel key={_.uniqueId('tab-panel-')}>\n        <table>\n          <tbody>\n            {fields.map(({ displayText, path }) => {\n              const fieldValue = fieldValueMarkup(path, _.get(feature, path));\n              const fieldTitle = displayText.split('\\n').map(part => {\n                return <div key={_.uniqueId('field-title-')}>{part}</div>;\n              });\n              if (fieldValue) {\n                return (\n                  <tr key={_.uniqueId('row-')}>\n                    <td style={{ width: '35%' }}>{fieldTitle}</td>\n                    <td>{fieldValue}</td>\n                  </tr>\n                );\n              }\n              return null;\n            })}\n          </tbody>\n        </table>\n      </TabPanel>\n    );\n  });\n\n  return (\n    <Tabs>\n      {tabHeaderMarkup}\n      {tabPanelMarkup}\n    </Tabs>\n  );\n};\n\nSitePopup.propTypes = {\n  feature: PropTypes.object.isRequired,\n};\n\nexport default SitePopup;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport PropTypes from 'prop-types';\nimport { Marker, Popup, Tooltip } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport L from 'leaflet';\nimport _ from 'lodash';\nimport Icons from '../icons';\nimport Icon from './icon';\nimport { placeTypeLookup, orderLookup } from '../utils';\nimport SitePopup from './site_popup';\n\nconst markerIcon = feature => {\n  const setProps = {\n    ...Icons.defaultProps,\n    ...placeTypeLookup(feature.properties.place_type),\n    ...orderLookup(feature.properties.order),\n  };\n  return L.divIcon({\n    html: ReactDOMServer.renderToString(\n      <Icon\n        icon={setProps.icon}\n        color={setProps.color}\n        translate={setProps.translate}\n        scale={setProps.scale}\n        size={setProps.size}\n      />\n    ),\n  });\n};\n\nconst handleMarkerClick = async marker => {\n  const feature = _.get(marker, 'layer.options.data');\n  if (feature) {\n    ReactDOM.render(\n      <SitePopup feature={feature} />,\n      document.getElementById('feature-popup')\n    );\n  }\n};\n\nconst Markers = ({ sites }) => {\n  const markersMarkup = sites.map(feature => {\n    const coordinates = _.get(feature, 'geometry.coordinates');\n    if (coordinates) {\n      const { english_place_name, italian_place_name } = feature.properties;\n      return (\n        <Marker\n          key={feature.id}\n          position={coordinates.reverse()} // argh!\n          icon={markerIcon(feature)}\n          data={feature} // this.ends up in marker.layer.options.data\n        >\n          <Popup minWidth=\"662\" maxWidth=\"662\" className=\"leaflet_popup\">\n            <div id=\"feature-popup\" />\n          </Popup>\n          <Tooltip>\n            {/* eslint-disable camelcase */}\n            <div className=\"popup-container\">\n              <div className=\"popup-content\">\n                {`${italian_place_name} (${english_place_name})`}\n              </div>\n            </div>\n            {/* eslint-enable camelcase */}\n          </Tooltip>\n        </Marker>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <MarkerClusterGroup onClick={marker => handleMarkerClick(marker)}>\n      {markersMarkup}\n    </MarkerClusterGroup>\n  );\n};\n\nMarkers.propTypes = {\n  sites: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Markers;\n","import { connect } from 'react-redux';\nimport Markers from '../components/markers';\n\nconst mapStateToProps = state => {\n  const { sites } = state;\n  return { sites };\n};\n\nconst MarkersContainer = connect(mapStateToProps)(Markers);\n\nexport default MarkersContainer;\n","class SearchProvider {\n  constructor(sites) {\n    this.sites = sites;\n  }\n\n  async search({ query }) {\n    const lowerCaseQuery = query.toLowerCase();\n    const matches = this.sites.filter(\n      feature =>\n        feature.geometry &&\n        feature.geometry.coordinates &&\n        feature.geometry.coordinates.length >= 2 &&\n        feature.properties.english_place_name\n          .toLowerCase()\n          .indexOf(lowerCaseQuery) > -1\n    );\n\n    if (matches && matches.length > 0) {\n      return matches.map(feature => ({\n        x: feature.geometry.coordinates[1],\n        y: feature.geometry.coordinates[0],\n        label: feature.properties.english_place_name,\n      }));\n    }\n    return [];\n  }\n}\n\nexport default SearchProvider;\n","import { withLeaflet, MapControl } from 'react-leaflet';\nimport { GeoSearchControl } from 'leaflet-geosearch';\nimport SearchProvider from '../containers/search_provider';\n\nclass Search extends MapControl {\n  initProvider(sites) {\n    this.provider = new SearchProvider(sites);\n  }\n\n  createLeafletElement({ sites }) {\n    this.initProvider(sites);\n\n    return GeoSearchControl({\n      provider: this.provider,\n      showMarker: false,\n      showPopup: true,\n      searchLabel: 'search',\n      autoClose: true,\n      keepResult: true,\n    });\n  }\n}\n\nconst SearchBar = withLeaflet(Search);\nexport default SearchBar;\n","import { connect } from 'react-redux';\nimport SearchBar from '../components/search_bar';\n\nconst mapStateToProps = state => {\n  return {\n    sites: state.sites,\n  };\n};\n\nconst SearchBarContainer = connect(mapStateToProps)(SearchBar);\n\nexport default SearchBarContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from 'react-leaflet';\nimport { getListOfOrders, orderLookup } from '../utils';\n\nconst Legend = ({ sites, loading }) => {\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  const orderList = getListOfOrders(sites);\n  const orderListMarkup = orderList.map(order => (\n    <li key={order}>\n      <span\n        className=\"color-block\"\n        style={{ background: Object.values(orderLookup(order)).toString() }}\n      />\n      <span className=\"label-text\">{order}</span>\n    </li>\n  ));\n  return (\n    <Pane>\n      <div className=\"map-legend\">\n        <div className=\"legend-title\">\n          Norman Sicily&#39;s Monastic Landscape\n        </div>\n        <div className=\"legend-scale\">\n          <ul className=\"legend-labels\">{orderListMarkup}</ul>\n        </div>\n      </div>\n    </Pane>\n  );\n};\n\nLegend.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  sites: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Legend;\n","import { connect } from 'react-redux';\nimport Legend from '../components/legend';\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    sites: state.sites,\n  };\n};\n\nconst LegendContainer = connect(mapStateToProps)(Legend);\n\nexport default LegendContainer;\n","const CONFIG = {\n  centerPoint: [37.73, 14.2],\n  initialZoom: 8,\n  maxZoom: 18,\n  tileURL:\n    'https://api.mapbox.com/styles/v1/norman-sicily-project/cjmm4r23s7n2b2rs0tq0a9rw0/tiles/256/{z}/{x}/{y}@2x?access_token=',\n  mapAttribution:\n    '<a href=&quot;https://www.mapbox.com/about/maps/&quot;>© Mapbox</a> <a href=&quot;http://www.openstreetmap.org/copyright&quot;>© OpenStreetMap</a>',\n  dataFile: 'places-20191009.geojson',\n};\n\nexport default CONFIG;\n","// IMPORTANT! DO NOT COMMIT THIS FILE!\n//\n// Replace the text 'YOUR MAPBOX ACCESS TOKEN' with your MapBox access token\n// and save and rename this file to 'apikey.js'.\n//\nconst API_KEY = {\n  MAPBOX_ACCESS_TOKEN: 'pk.eyJ1Ijoibm9ybWFuLXNpY2lseS1wcm9qZWN0IiwiYSI6ImNqbW00Y3RtbTA2cjUzcWtnNzVncnNpd2gifQ.Sk1EC4ARXkkm8C1YQCl08A'\n};\n\nexport default API_KEY;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, TileLayer } from 'react-leaflet';\nimport MarkersContainer from '../containers/markers';\nimport SearchBarContainer from '../containers/search_bar';\nimport LegendContainer from '../containers/legend';\nimport config from '../config';\nimport apikeys from '../apikeys';\n\nconst InteractiveMap = ({ loading }) => {\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <Map\n        center={config.centerPoint}\n        zoom={config.initialZoom}\n        maxZoom={config.maxZoom}\n      >\n        <TileLayer\n          url={config.tileURL + apikeys.MAPBOX_ACCESS_TOKEN}\n          attribution={config.mapAttribution}\n        />\n        <MarkersContainer />\n        <SearchBarContainer />\n        <LegendContainer />\n      </Map>\n    </div>\n  );\n};\n\nInteractiveMap.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default InteractiveMap;\n","import { connect } from 'react-redux';\nimport InteractiveMap from '../components/interactive_map';\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n  };\n};\n\nconst InteractiveMapContainer = connect(mapStateToProps)(InteractiveMap);\n\nexport default InteractiveMapContainer;\n","export const INIT_MAP = 'INIT_MAP';\nexport const LOAD_SITES_BEGIN = 'LOAD_SITES_BEGIN';\nexport const LOAD_SITES_SUCCESS = 'LOAD_SITES_SUCCESS';\nexport const LOAD_SITES_FAILURE = 'LOAD_SITES_SUCCESS';\n\nexport function initMap() {\n  return {\n    type: INIT_MAP,\n  };\n}\nexport function loadSitesBegin() {\n  return {\n    type: LOAD_SITES_BEGIN,\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport InteractiveMapContainer from '../containers/interactive_map';\nimport { initMap } from '../actions';\nimport './app.css';\n\nconst App = () => <InteractiveMapContainer />;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initMap: () => {\n      dispatch(initMap());\n    },\n  };\n};\n\nexport default connect(mapDispatchToProps)(App);\n","import { cloneDeep, set, unset, compose } from 'lodash/fp';\nimport {\n  INIT_MAP,\n  LOAD_SITES_BEGIN,\n  LOAD_SITES_SUCCESS,\n  LOAD_SITES_FAILURE,\n} from '../actions';\n\nconst initialState = {\n  loading: false,\n  sites: [],\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case INIT_MAP:\n      return cloneDeep(state);\n    case LOAD_SITES_BEGIN:\n      return set('loading', true, state);\n    case LOAD_SITES_SUCCESS:\n      return compose(\n        set('loading', false),\n        set('sites', action.sites),\n        unset('error')\n      )(state);\n    case LOAD_SITES_FAILURE:\n      return compose(\n        set('loading', false),\n        set('error', action.error),\n        set('sites', [])\n      );\n    default:\n      return state;\n  }\n}\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport set from 'lodash/fp/set';\nimport _ from 'lodash';\nimport config from '../config';\nimport {\n  INIT_MAP,\n  LOAD_SITES_SUCCESS,\n  LOAD_SITES_FAILURE,\n  loadSitesBegin,\n} from '../actions';\n\nexport function* fetchSites() {\n  const path =\n    process.env.NODE_ENV === 'production' ? '/places/map/data' : '/data';\n  const endpoint = `${path}/${config.dataFile}`;\n  try {\n    yield put(loadSitesBegin());\n    const response = yield call(fetch, endpoint);\n    const data = yield response.json();\n    const features = data.features ? data.features : [];\n    const sites = features.map(feature =>\n      set('id', _.uniqueId('site_'), feature)\n    );\n    yield put({ type: LOAD_SITES_SUCCESS, sites });\n  } catch (e) {\n    yield put({ type: LOAD_SITES_FAILURE, error: e.message });\n  }\n}\n\nexport function* initMap() {\n  yield takeEvery(INIT_MAP, () => fetchSites());\n}\n\nexport default function* mapSaga() {\n  yield all([initMap()]);\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* eslint-disable no-console, no-param-reassign, no-use-before-define */\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/app';\nimport { initMap } from './actions';\nimport rootReducers from './reducers';\nimport mapSaga from './sagas/map_saga';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(mapSaga);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nstore.dispatch(initMap());\n\nregisterServiceWorker();\n"],"sourceRoot":""}